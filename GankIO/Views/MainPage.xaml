<Page x:Class="GankIO.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:GankIO.ViewModels"
      xmlns:local="using:GankIO.Views"
      xmlns:uc="using:GankIO.UserControls"
      xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
      xmlns:tkCtrls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:t10Ctrls="using:Template10.Controls"
      mc:Ignorable="d">
    <Page.Resources>
        <Storyboard x:Name="changeWidthStoryboard" Duration="0:0:0.5">
            <DoubleAnimation Storyboard.TargetName="MasterColumn"
                             Storyboard.TargetProperty="MaxWidth"
                             From="320"
                             To="0" />
            <!--<DoubleAnimation Storyboard.TargetName="DetailColumn"
                             Storyboard.TargetProperty="MaxWidth"
                             To="320" />-->
        </Storyboard>
    </Page.Resources>

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />

    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <t10Ctrls:PageHeader x:Name="pageHeader"
                             Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="{x:Bind ViewModel.CurrentDate, Mode=OneWay, Converter={StaticResource StrFormatConverter}, ConverterParameter=\{0:yyyy年M月d日\}}">
            <t10Ctrls:PageHeader.PrimaryCommands>
                
                <AppBarButton Icon="Calendar" Label="选择日期">

                    <AppBarButton.Flyout>
                        <!--<DatePickerFlyout Date="{x:Bind ViewModel.CurrentDate, Mode=TwoWay}"
                                          MaxYear="{x:Bind ViewModel.MaxDate, Mode=OneWay}"
                                          MinYear="{x:Bind ViewModel.MinDate, Mode=OneWay}"
                                          Placement="Bottom" />-->
                        <Flyout x:Name="calendarFlyout">
                            <!--<CalendarDatePicker ></CalendarDatePicker>-->
                            <CalendarView Name="calendarView"
                                          IsOutOfScopeEnabled="True"
                                          MaxDate="{x:Bind ViewModel.MaxDate, Mode=OneWay}"
                                          MinDate="{x:Bind ViewModel.MinDate, Mode=OneWay}"
                                          SelectedDatesChanged="calendarView_SelectedDatesChanged"
                                          Tag="{x:Bind ViewModel.HistoryDates, Mode=OneWay}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="SelectedDatesChanged">
                                        <core:InvokeCommandAction Command="{Binding SelectedDatesChanged}" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="CalendarViewDayItemChanging">
                                        <core:InvokeCommandAction Command="{Binding CalendarItemChanging}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>

                            </CalendarView>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton Name="RefreshAppBarButton"
                              Icon="Refresh"
                              Label="刷新" Click="{x:Bind ViewModel.ReloadData}" />

            </t10Ctrls:PageHeader.PrimaryCommands>
            <!--  secondary commands  -->
            <t10Ctrls:PageHeader.SecondaryCommands>
                <AppBarButton Label="提交干货" Click="Add2GankButton_Click"/>
                
                
                <!--<AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />-->
            </t10Ctrls:PageHeader.SecondaryCommands>

        </t10Ctrls:PageHeader>
        <!--<Border RelativePanel.Below="pageHeader">
            <TextBlock Text="{x:Bind ViewModel.DayResults}" Visibility="{x:Bind ViewModel.DayResults}"></TextBlock>
        </Border>-->
        
        <Grid x:Name="LayoutRoot"
              Loaded="LayoutRoot_Loaded"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.Below="pageHeader">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MasterColumn" Width="320" />
                <ColumnDefinition x:Name="DetailColumn" Width="*" />
            </Grid.ColumnDefinitions>

            <ListView x:Name="MasterListView"
                      Grid.Row="1"
                      AllowDrop="True"
                      CanDragItems="True"
                      CanReorderItems="True"
                      IsItemClickEnabled="True"
                      ItemClick="MasterListView_ItemClick"
                      ItemTemplateSelector="{StaticResource MyDataTemplateSelector}"
                      ItemsSource="{x:Bind ViewModel.DayResults}">
                <interactivity:Interaction.Behaviors>
                    <!--<Core:EventTriggerBehavior EventName="ItemClick">
                        <Core:InvokeCommandAction Command="{Binding ListViewItemClick}" />
                    </Core:EventTriggerBehavior>-->
                    <behaviors:FadeHeaderBehavior />
                </interactivity:Interaction.Behaviors>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Header>
                    
                    <StackPanel Orientation="Vertical">
                        <ProgressBar Width="auto" Height="10"
                                     IsIndeterminate="True"
                                     Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <tkCtrls:ImageEx x:Name="headerImage" IsCacheEnabled="True"
                           Height="480"
                           Source="{x:Bind ViewModel.HeaderImage, Mode=OneWay}"
                           Visibility="{x:Bind ViewModel.HeaderImage, Mode=OneWay,Converter={StaticResource VisibleWhenNotNullConverter}}"
                           Stretch="UniformToFill" />
                        <TextBlock HorizontalAlignment="Center" 
                                   Visibility="{x:Bind ViewModel.ErrorMsg, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}">
                            <Run Text="{x:Bind ViewModel.ErrorMsg, Mode=OneWay}" />
                            <!--<Hyperlink Click="{x:Bind ViewModel.ReloadData}">点击刷新</Hyperlink>-->
                        </TextBlock>
                        
                    </StackPanel>
                </ListView.Header>
            </ListView>
            <uc:WebUserControl x:Name="MainWebView"
                    Grid.RowSpan="2"
                     Grid.Column="1"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch">
                
            </uc:WebUserControl>
            <!--<WebView Name="MainWebView"
                     Grid.RowSpan="2"
                     Grid.Column="1"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch" />-->

        </Grid>



        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup" CurrentStateChanged="AdaptiveStates_CurrentStateChanged">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Narrow Visual State" />-->
                        <!--<Setter Target="headerImage.Stretch" Value="UniformToFill" />-->
                        <Setter Target="MasterColumn.Width" Value="*" />
                        <Setter Target="DetailColumn.Width" Value="0" />
                        <Setter Target="MasterListView.SelectionMode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Normal Visual State" />-->
                        <!--<Setter Target="headerImage.Stretch" Value="UniformToFill" />-->
                        <Setter Target="headerImage.Height" Value="320" />

                        <Setter Target="MasterColumn.Width" Value="320" />
                        <Setter Target="DetailColumn.Width" Value="*" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                        <!--<Setter Target="headerImage.Stretch" Value="UniformToFill" />-->

                        <Setter Target="MasterColumn.Width" Value="480" />
                        <Setter Target="DetailColumn.Width" Value="*" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
